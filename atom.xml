<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BAJIN&#39;S BLOG</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.qianbajin.com/"/>
  <updated>2018-01-24T14:52:22.335Z</updated>
  <id>http://www.qianbajin.com/</id>
  
  <author>
    <name>钱八斤</name>
    <email>qianbajin@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>运动加速器</title>
    <link href="http://www.qianbajin.com/2018/11/18/%E8%BF%90%E5%8A%A8%E5%8A%A0%E9%80%9F%E5%99%A8/"/>
    <id>http://www.qianbajin.com/2018/11/18/运动加速器/</id>
    <published>2018-11-18T14:49:55.000Z</published>
    <updated>2018-01-24T14:52:22.335Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="App" scheme="http://www.qianbajin.com/categories/App/"/>
    
    
  </entry>
  
  <entry>
    <title>adb 命令收集</title>
    <link href="http://www.qianbajin.com/2017/07/30/adb-%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
    <id>http://www.qianbajin.com/2017/07/30/adb-命令收集/</id>
    <published>2017-07-30T08:22:37.000Z</published>
    <updated>2018-01-24T11:32:35.735Z</updated>
    
    <content type="html"><![CDATA[<p>列出设备列表  </p>
<pre><code>adb devices 
</code></pre><p>输出示例</p>
<pre><code>List of devices attached
PBV7N16913007233        device 
</code></pre><p>PBV7N16913007233 为设备序列号,在连接多台设备时可用序列号指定设备<br>安装应用  </p>
<pre><code>adb install + 文件路径        //adb install D:\微信.apk
</code></pre><p>指定某个设备安装应用(当电脑连接多个设备时)</p>
<pre><code>adb -s 设备序列号 install     + 文件路径        //adb -s PBV7N16913007233 install 文件路径 
</code></pre><p>保存原apk数据并安装应用</p>
<pre><code>adb install -r + 文件路径            //adb install -r D:\微信.apk
</code></pre><p>卸载应用</p>
<pre><code>adb uninstall + 应用包名            //adb uninstall com.tencent.mobileqq
</code></pre><p>重启设备</p>
<pre><code>adb reboot
</code></pre><p>开启adb服务</p>
<pre><code>adb start-server
</code></pre><p>关闭adb服务</p>
<pre><code>adb kill-server
</code></pre><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><p>复制手机文件到电脑</p>
<pre><code>adb pull sdcard/360 d:\log        //将SD卡上名为360的文件夹复制到电脑 D盘下的log文件夹,文件同理
</code></pre><p>复制电脑文件到手机</p>
<pre><code>adb push d:\log\a.txt sdcard   //将电脑D盘下log文件夹下的a.txt文件复制到SD卡,文件夹同理
</code></pre><p>进入设备</p>
<pre><code>adb shell
</code></pre><p>切换到当前目录的子目录</p>
<pre><code>cd sdcard             //切换到sdcard
</code></pre><p>列出当前目录下的所有文件</p>
<pre><code>ls                
</code></pre><p>切换到上一层目录</p>
<pre><code>cd ..
</code></pre><p>切换到根目录</p>
<pre><code>cd /
</code></pre><p>删除文件</p>
<pre><code>rm 文件路径            //rm sdcard/a.log  删除SD卡名为a.log的文件
</code></pre><p>强制删除文件</p>
<pre><code>rm -f 文件路径           //rm sdcard/1/a.txt        强制删除SD卡文件夹1下的a.txt文件
</code></pre><p>创建文件</p>
<pre><code>touch sdcard/1/b.md            //在SD卡1文件夹下创建b.md文件
echo&gt; sdcard/1/c.txt        //在SD卡1文件夹下创建c.txt文件
</code></pre><p>查看文件内容</p>
<pre><code>cat casdrd/1/c.txt            //查看c.txt的内容并输出到控制台
</code></pre><p>重定向写入文件</p>
<pre><code>echo &quot;new text&quot; &gt; sdcard/1/c.txt    //清空c.txt里面的内容并写入新内容 new text
</code></pre><p>追加写入文件</p>
<pre><code>echo &quot;another new text&quot; &gt; sdcard/1/c.txt    //在c.txt的末尾另起一行追加写入another new text
</code></pre><p>删除空文件夹 </p>
<pre><code>rmdir 文件夹名称        //rmdir sdcard/1   删除SD卡上名为1的空文件夹
</code></pre><p>删除文件夹及该文件夹下的所有文件</p>
<pre><code>rm -r 文件夹名称        //rm sdcard/2       删除SD卡下名为2的文件夹及该文件夹下的所有文件
</code></pre><p>创建文件夹</p>
<pre><code>mkdir 文件夹名称            //mkdir sdcard/2       在SD卡上创建名为2的文件夹
</code></pre><p>移动文件</p>
<pre><code>mv sdcard/360/a.jpg sdcard/2            //将SD卡360文件夹下的a.jpg移动到SD卡名为2的文件夹下
</code></pre><p>移动文件并改名</p>
<pre><code>mv sdcard/360/a.jpg sdcard/2/b.png        //将SD卡360文件夹下的a.jpg移动到SD卡名为2的文件夹下并改名为b.png
</code></pre><p>移动文件夹</p>
<pre><code>mv sdcard/2 sdcard/360/        //将SD卡名为2的文件夹移动到360文件夹下
</code></pre><p>复制文件</p>
<pre><code>cp sdcard/360/aa.jpg sdcard/2/            //将SD卡360文件夹下的aa.jpg复制到SD卡名为2的文件夹下
</code></pre><p>文件重命名</p>
<pre><code>rename 2/a.png 2/ c.png            //将文件夹2下名为 a.png的文件重命名为 c.png
</code></pre><hr>
<h4 id="手机截屏"><a href="#手机截屏" class="headerlink" title="手机截屏"></a>手机截屏</h4><p>1.保存到手机</p>
<pre><code>screencap -p sdcard/a.png                        //进入设备后(adb shell)的操作,保存截屏到SD卡并命名为a.png
adb shell screencap -p sdcard/a.png                //截取当前屏幕并保存到SD卡并命名为a.png
adb shell system/bin/screencap -p sdcard/a.png        //截取当前屏幕并保存到SD卡并命名为a.png
</code></pre><p>2.保存到电脑<br> 在电脑D盘新建文件并命名为 cap.bat的批处理文件,将以下代码拷贝到文件并保存,双击运行批处理文件,就会截取当前屏幕并保存到批处理文件所在文件夹</p>
<pre><code>@echo off
set year=%date:~0,4%
set month=%date:~5,2%
set day=%date:~8,2%
set hour=%time:~0,2%
set min=%time:~3,2%
set sec=%time:~6,2%
set name=%year%%month%%day%_%hour%%min%%sec%.png
rem 下面是输出语句
::echo %name%
adb shell screencap -p /sdcard/1/%name%
adb pull /sdcard/1/%name%
adb shell rm /sdcard/1/%name%
::pause &gt;nul
</code></pre><p>参考:<a href="https://stackoverflow.com/questions/1192476/format-date-and-time-in-a-windows-batch-script" target="_blank" rel="external">https://stackoverflow.com/questions/1192476/format-date-and-time-in-a-windows-batch-script</a></p>
<h4 id="手机录屏-支持MP4及avi格式-部分手机不支持-默认180s-不录制声音-按Ctrl-C停止录屏"><a href="#手机录屏-支持MP4及avi格式-部分手机不支持-默认180s-不录制声音-按Ctrl-C停止录屏" class="headerlink" title="手机录屏,支持MP4及avi格式(部分手机不支持),默认180s,不录制声音,按Ctrl + C停止录屏"></a>手机录屏,支持MP4及avi格式(部分手机不支持),默认180s,不录制声音,按Ctrl + C停止录屏</h4><p>输入  <code>adb shell screenrecord --help</code> 查看参数配置如下</p>
<pre><code>Options:
--size WIDTHxHEIGHT
Set the video size, e.g. &quot;1280x720&quot;.  Default is the device&apos;s mai
display resolution (if supported), 1280x720 if not.  For best res
use a size supported by the AVC encoder.
--bit-rate RATE
Set the video bit rate, in megabits per second.  Default 4Mbps.
--time-limit TIME
Set the maximum recording time, in seconds.  Default / maximum is
--rotate
Rotate the output 90 degrees.
--verbose
Display interesting information on stdout.
--help
Show this message.
Recording continues until Ctrl-C is hit or the time limit is reached.
</code></pre><hr>
<pre><code>adb shell screenrecord sdcard/1/a.mp4        //手机录屏并保存到SD卡的1文件夹下名为a.mp4
</code></pre><p>指定录制时间(支持 1 ~ 180 s),如果不指定,默认180s</p>
<pre><code>adb shell screenrecord --time-limit 10 sdcard/1/b.mp4    //手机录屏10s并保存到SD卡的1文件夹下名为b.mp4
</code></pre><p>指定录制分辨率</p>
<pre><code>adb shell screenrecord --size 2560x1440 sdcard/1/c.mp4
</code></pre><p>指定录制时间跟分辨率</p>
<pre><code>adb shell screenrecord --time-limit 5 --size 2560x1440 sdcard/1/d.mp4
</code></pre><p>指定码率</p>
<pre><code>adb shell screenrecord --bit-rate 5000000 sdcard/1/g.mp4
</code></pre><h4 id="日志输出"><a href="#日志输出" class="headerlink" title="日志输出"></a>日志输出</h4><p>输出日志到控制台<br>    adb logcat *:d        //打印debug级别日志到控制台<br>日志输出到文件</p>
<pre><code>adb logcat -d time &gt; D:\log.txt        //将debug级别日志输出到D盘log.txt文件
</code></pre><p>过滤指定tag的日志并输出到控制台</p>
<pre><code>adb logcat -s tag        //过滤tag日志并输出到控制台
</code></pre><p>将log过滤标志为TAG的日志输出到文件</p>
<pre><code>adb logcat -s tag time &gt; d:\log\a.log
</code></pre><p>关于过滤包名的我试了下没成功,可参考<a href="https://zhidao.baidu.com/question/684415830553505732.html?si=1&amp;qbpn=1_1&amp;tx=&amp;wtp=wk&amp;word=adb+logcat+%E6%8A%93%E5%8F%96%E6%97%A5%E5%BF%97&amp;fr=solved&amp;from=qb&amp;ssid=&amp;uid=bd_1424494872_66&amp;pu=sz%40224_240%2Cos%40&amp;step=14&amp;bd_page_type=1&amp;init=middle" target="_blank" rel="external">链接</a></p>
<h4 id="模拟操作设备"><a href="#模拟操作设备" class="headerlink" title="模拟操作设备"></a>模拟操作设备</h4><p>模拟点击屏幕</p>
<pre><code>adb shell input tap 1000 500     //模拟点击屏幕上坐标为(1000,500)的点
</code></pre><p>模拟滑动屏幕</p>
<pre><code>adb shell input swipe 500 500 1000 500        //模拟从点(500,500)滑动到点(1000,500)
</code></pre><p>模拟按下按键,常用几个keycode 3:为home键 4:back键 24:音量+  25:音量-  26:电源键<br>更多keycode请参考:<a href="https://testerhome.com/topics/1386" target="_blank" rel="external">https://testerhome.com/topics/1386</a></p>
<pre><code>adb shell input keyevent keycode    //adb shell input keyevent 3  模拟按下hone键
</code></pre><h4 id="获取设备信息"><a href="#获取设备信息" class="headerlink" title="获取设备信息"></a>获取设备信息</h4><p>设备信息保存在<code>/system/build.prop</code>文件下,通过adb命令</p>
<pre><code>adb shell cat /system/build.prop
</code></pre><p>输出如下</p>
<pre><code># begin build properties
# autogenerated by buildinfo.sh
ro.build.id=LMY47X
ro.build.display.id=LMY47X.G9200ZCU2COJA
ro.build.version.incremental=G9200ZCU2COJA
ro.build.version.sdk=22
ro.build.version.codename=REL
ro.build.version.all_codenames=REL
ro.build.version.release=5.1.1
ro.build.date=Thu Oct 22 19:33:32 KST 2015
ro.build.date.utc=1445510012
ro.build.type=user
ro.build.user=dpi
ro.build.host=SWDD5618
ro.build.tags=release-keys
ro.build.flavor=zerofltezc-user
ro.product.model=SM-G9200
ro.product.brand=samsung
ro.product.name=zerofltezc
ro.product.device=zerofltechn
ro.product.board=universal7420
# ro.product.cpu.abi and ro.product.cpu.abi2 are obsolete,
# use ro.product.cpu.abilist instead.
ro.product.cpu.abi=arm64-v8a
ro.product.cpu.abilist=arm64-v8a,armeabi-v7a,armeabi
ro.product.cpu.abilist32=armeabi-v7a,armeabi
ro.product.cpu.abilist64=arm64-v8a
ro.product.manufacturer=samsung
ro.product.locale.language=zh
ro.product.locale.region=CN
ro.wifi.channels=
ro.board.platform=exynos5
# ro.build.product is obsolete; use ro.product.device
ro.build.product=zerofltechn
# Do not try to parse description, fingerprint, or thumbprint
ro.build.description=zerofltezc-user 5.1.1 LMY47X G9200ZCU2COJA release-keys
ro.build.fingerprint=samsung/zerofltezc/zerofltechn:5.1.1/LMY47X/G9200ZCU2COJA:u
ser/release-keys
ro.build.characteristics=phone china_wlan
# Samsung Specific Properties
ro.build.PDA=G9200ZCU2COJA
ro.build.hidden_ver=G9200ZCU2COJA
ro.config.rm_preload_enabled=0
ro.build.changelist=5685365
ro.product_ship=true
ro.chipname=exynos7420
# end build properties
</code></pre><p>可通过如下命令获取该文件的信息,比如<br>获取设备型号</p>
<pre><code>adb shell getprop ro.product.model        //会输出如 SM-G9200
</code></pre><p>获取设备品牌</p>
<pre><code>adb shell getprop ro.product.brand        //输出如samsung
</code></pre><p>获取系统版本描述</p>
<pre><code>adb shell getprop ro.build.description    //输出 zerofltezc-user 5.1.1 LMY47X G9200ZCU2COJA release-keys
</code></pre><p>获取处理器芯片名称</p>
<pre><code>adb shell getprop ro.chipname    //输出exynos7420
</code></pre><ul>
<li>获取设备其他参数</li>
</ul>
<p>获取屏幕分辨率</p>
<pre><code>adb shell wm size
</code></pre><p>获取屏幕密度</p>
<pre><code>adb shell wm density
</code></pre><p>获取屏幕参数</p>
<pre><code>adb shell dumpsys window displays
</code></pre><p>三星S6输出如下</p>
<pre><code>WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)
Display: mDisplayId=0
init=1440x2560 640dpi cur=1440x2560 app=1440x2560 rng=1440x1340-2560x2460
deferred=false layoutNeeded=false
</code></pre><p>华为P9展示虚拟导航栏时输出如下,虚拟导航栏会占用部分屏幕空间</p>
<pre><code>Display: mDisplayId=0
init=1080x1920 480dpi cur=1920x1080 app=1794x1080 rng=1080x1008-1794x1722
deferred=false layoutNeeded=false
</code></pre><p>华为P9隐藏虚拟导航栏时输出如下:</p>
<pre><code>Display: mDisplayId=0
init=1080x1920 480dpi cur=1920x1080 app=1920x1080 rng=1080x1008-1920x1848
deferred=false layoutNeeded=false
</code></pre><p>获取CPU信息</p>
<pre><code>adb shell cat /proc/cpuinfo
</code></pre><p>输出示例</p>
<pre><code>Processor       : AArch64 Processor rev 2 (aarch64)
processor       : 0
Features        : fp asimd aes pmull sha1 sha2 crc32
CPU implementer : 0x41
CPU architecture: AArch64
CPU variant     : 0x0
CPU part        : 0xd03
CPU revision    : 2

Hardware        : SAMSUNG Exynos7420
</code></pre><p>获取电池状况信息</p>
<pre><code>adb shell dumpsys battery
</code></pre><p>输出示例</p>
<pre><code>Current Battery Service state:
AC powered: false
USB powered: true
Wireless powered: false
status: 2
health: 2
present: true
level: 73
scale: 100
voltage: 3959
temperature: 301
technology: Li-ion
LED Charging: true
LED Low Battery: true
current now: -232
Adaptive Fast Charging Settings: true
SUPPORT_LOG_BATTERY_USAGE: true
isTablet: false
mBatteryMaxTemp: 479
mBatteryMaxCurrent: 2625
mBatteryAsocEfs: 88
mBatteryAsocNow: 90
FEATURE_SAVE_BATTERY_CYCLE: false
USE_FAKE_BATTERY: false
</code></pre><p>获取 WLAN 的 MAC 地址</p>
<pre><code>adb shell cat /sys/class/net/wlan0/address        //输出 90:b6:86:d0:85:b4
</code></pre><h4 id="Monkey测试"><a href="#Monkey测试" class="headerlink" title="Monkey测试"></a>Monkey测试</h4><pre><code>adb shell monkey -p your.package.name -v 500             //向指定包名发送500次的模拟点击事件
adb shell monkey -p com.tencent.mobileqq -v 500        //对qq做500次的monkey测试
</code></pre><h4 id="更改adb端口"><a href="#更改adb端口" class="headerlink" title="更改adb端口"></a>更改adb端口</h4><p>进入环境变量–&gt;新建–&gt;变量名填入 <code>ANDROID_ADB_SERVER_PORT</code> ,变量值填入一个端口号,如5080,确定,退出 </p>
<h4 id="使用PackageManage查看软件"><a href="#使用PackageManage查看软件" class="headerlink" title="使用PackageManage查看软件"></a>使用PackageManage查看软件</h4><p>列出所有安装的软件</p>
<pre><code>adb shell pm list packages
</code></pre><p>列出所有系统软件</p>
<pre><code>adb shell pm list packages -s
</code></pre><p>列出所有disan第三方软件</p>
<pre><code>adb shell pm list packages -3
</code></pre><p>更多pm命令可参考 <a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="external">Android 调试桥</a></p>
<p>更多adb命令参考 <a href="http://www.cnblogs.com/JianXu/p/5161179.html" target="_blank" rel="external">adb shell 常用命令</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;列出设备列表  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb devices 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出示例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;List of devices attached
PBV7N16913007233        device 
&lt;/code&gt;
    
    </summary>
    
    
      <category term="adb 命令" scheme="http://www.qianbajin.com/tags/adb-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 快捷键整理</title>
    <link href="http://www.qianbajin.com/2017/07/30/Android-Studio-%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86/"/>
    <id>http://www.qianbajin.com/2017/07/30/Android-Studio-快捷键整理/</id>
    <published>2017-07-30T03:54:39.000Z</published>
    <updated>2018-01-24T14:50:14.463Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Android-Studio-快捷键整理，基于个人使用习惯"><a href="#Android-Studio-快捷键整理，基于个人使用习惯" class="headerlink" title="Android Studio 快捷键整理，基于个人使用习惯"></a>Android Studio 快捷键整理，基于个人使用习惯<a id="more"></a></h4><pre><code>Ctrl + C                            复制
Ctrl + V                            粘贴
Ctrl + A                            全选
Ctrl + S                            保存
Ctrl + D                            复制行/复制当前选中代码
Ctrl + F                            在当前窗口进行文本搜索
Ctrl + X                            删除行/剪切
Ctrl + Z                            撤销
Ctrl + P                            展示当前方法需要的参数,包括参数类型
Ctrl + F12                            打开当前类结构对话框,支持搜索方法,变量
Ctrl + N                            关键字快速定位到类
Ctrl + shift + N                    关键字快速定位到文件,包括XML等资源文件(类似双击shift,但会对文件分类,定位更准确)
Ctrl + alt + shift + N                关键字快速定位到标志(会搜索到R文件的引用,不常用,很少用)
Ctrl + shift + Z                    取消撤销
Ctrl + w                            选中代码块
Ctrl + shift + W                    取消选中代码块
Ctrl + home                            跳到当前窗口的顶部
Ctrl + end                            跳到当前窗口的末尾    

F2                                    快速定位到代码报错处
F6                                    移动（将当前类移到其他包或其他module）
F7                                    打断点(debug)时 跳到方法内部
F8                                    打断点(debug)时 跳到下一步
F9                                    打断点(debug)时 跳出此次断点

alt + 2                                打开Android Monitor 窗口(alt + 数字键,可以打开as四周带数字的窗口)
alt + S                                运行APP(自己加的快捷键,同 shift + F10)
alt + D                                清除logcat 日志(自己加的快捷键,通常配合 alt + 2 一起使用,需要观察日志时通常alt+s,alt+2,alt+d 一起使用)
alt + insert                        快速插入get/set/toString 等方法
alt + enter                            代码快速提示,感觉是as用的最多的一个快捷键

shift + S                            打开当前类所在文件夹 （自己修改的快捷键,Show in Explorer）
shift + F                            全局搜索   （自己修改的快捷键,Find in Path）

Ctrl + alt + T                        将选中代码用 try/catch 等语句包裹
Ctrl + alt + O                        快速导包/移除包
Ctrl + alt + M                        将选中代码块抽取成方法
Ctrl + alt + S                        打开设置窗口
Ctrl + alt + shift + S                打开工程结构窗口
Ctrl + alt + 左右方向键                跟踪代码时前进后退

Ctrl + shift + F                    代码格式化  （自己修改的快捷键）
Ctrl + shift + V                    打开粘贴板
Ctrl + shift + S                    将选中代码合并到一行,同 (Ctrl + shift + j,join in line）
Ctrl + shift + U                    将选中代码转换为大写/小写
Ctrl + shift + space                代码自动补全
Ctrl + shift + enter                将光标放到下一行,若当前行还没分号结束,则补齐分号(比较实用)
Ctrl +alt + enter                    将光标放到上一行
alt + shift    + R                        重命名类/方法/变量
</code></pre><h4 id="Windows下快捷键-在as及平时工作中同样适用"><a href="#Windows下快捷键-在as及平时工作中同样适用" class="headerlink" title="Windows下快捷键,在as及平时工作中同样适用"></a>Windows下快捷键,在as及平时工作中同样适用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">shift + 左右方向键					选中/取消选中一个字母或汉字</div><div class="line">Ctrl + shift + 左右方向键 				选中/取消选中一个字块</div><div class="line">alt + tab						在多个窗口之间进行切换(工作中很实用,常用于两个窗口之间来回切换)</div><div class="line">Win + tab						功能同上,但窗口会以大窗口的形式层叠展示</div><div class="line">Ctrl + alt + tab					以缩略图的形式展现当前打开的所有窗口,松开按键窗口不会消失,可用方向键在窗口间切换</div><div class="line">Ctrl + Win + tab					以大窗口的形式展现当前打开的所有窗口,松开按键窗口不会消失,可用方向键在窗口间切换</div><div class="line">Win + E							打开资源管理器,Windows上会直接打开我的电脑窗口</div><div class="line">Win + R							打开应用程序检索窗口,输入命令会打开相应的应用程序,如输入cmd会打开命令行窗口,还可自己配置命令到环境变量用来打开相应程序</div><div class="line">Win + L							锁定屏幕				</div><div class="line">Ctrl + alt + delete 					切换用户</div></pre></td></tr></table></figure>   
<h4 id="除了以上快捷键-postfix快捷键也很实用-比如"><a href="#除了以上快捷键-postfix快捷键也很实用-比如" class="headerlink" title="除了以上快捷键,postfix快捷键也很实用,比如"></a>除了以上快捷键,postfix快捷键也很实用,比如</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.for								增强for循环</div><div class="line">.fori								普通for循环</div><div class="line">.if								以if语句包裹当前布尔值变量</div><div class="line">.else								当前布尔值变量取反并以if语句包裹</div><div class="line">.nn								not null</div><div class="line">.null								null</div><div class="line">.log								打印log</div><div class="line">.toast								吐司</div><div class="line">.field								提取成员变量</div><div class="line">......</div><div class="line">//还有很多不怎么常用的,掌握上面几个可以少敲很多代码</div></pre></td></tr></table></figure>
<h4 id="提高敲代码效率的其他tips"><a href="#提高敲代码效率的其他tips" class="headerlink" title="提高敲代码效率的其他tips"></a>提高敲代码效率的其他tips</h4><ul>
<li>在Setting–&gt;Editor–&gt;Live Templates下定义自己的Java和XML模板,能节省很多时间<br>如定义一个tv在模板中放入如下代码  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;TextView</div><div class="line">      android:id=&quot;@+id/tv_$dfsf$&quot;</div><div class="line">      android:text=&quot;$dfsf$&quot;</div><div class="line">      android:textSize=&quot;16sp&quot;</div><div class="line">      android:layout_width=&quot;match_parent&quot;</div><div class="line">      android:layout_height=&quot;wrap_content&quot; /&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Android-Studio-快捷键整理，基于个人使用习惯&quot;&gt;&lt;a href=&quot;#Android-Studio-快捷键整理，基于个人使用习惯&quot; class=&quot;headerlink&quot; title=&quot;Android Studio 快捷键整理，基于个人使用习惯&quot;&gt;&lt;/a&gt;Android Studio 快捷键整理，基于个人使用习惯
    
    </summary>
    
      <category term="Android Studio" scheme="http://www.qianbajin.com/categories/Android-Studio/"/>
    
    
      <category term="as" scheme="http://www.qianbajin.com/tags/as/"/>
    
  </entry>
  
</feed>
